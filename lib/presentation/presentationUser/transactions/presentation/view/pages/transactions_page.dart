import 'package:shiftapp/presentation/presentationUser/common/common_state.dart';import 'package:shiftapp/presentation/presentationUser/transactions/presentation/view/pages/transactions_screen.dart';import 'package:shiftapp/presentation/shared/components/text_field/date_time_text_field_picker.dart';import '../../../../../../../main_index.dart';import '../../../../../shared/components/index.dart';import '../../../../advancedFilter/widgets/text_field_search_job.dart';import '../../../../salarydefinitionrequest/requests/widgets/title_and_add_new_request.dart';import '../cubit/transactions_cubit.dart';class TransactionsPage extends BaseBlocWidget<UnInitState, TransactionsCubit> {  int tabIndex = 1;  @override  String? title(BuildContext context) {    // TODO: implement title    return strings.transactions;  }  @override  Widget build(BuildContext context) {    return mainFrame(      body: Column(        children: [          TitleAndAddNewRequest(            title: strings.view_transactions,            textButton: strings.add_transactions,            onTap: () {              Navigator.pushNamed(context, Routes.addTransactionsPage);              // MainReceiveVehiclePage.push(              //   context,              //   mainReceiveVehicleArg: MainReceiveVehicleArg(isEdit: false),              //   onSuccess: () {              //     checkAndFetchInitData();              //   },              // );            },          ),          Expanded(            child: DynamicTabBarView(              isSeparate: true,              margin: const EdgeInsets.all(0),              padding: const EdgeInsets.all(0),              marginTabs: const EdgeInsets.symmetric(horizontal: 16),              tabs: [                DynamicItem(name: strings.in_progress, id: 1),                DynamicItem(name: strings.completed_tasks, id: 2),              ],              onTap: (index) {                tabIndex = index;                //  checkAndFetchInitData();              },              pageWidget:              Column(                children: [                  TextFieldSearchJob(                    title: strings.search,                    readOnly: false,                    onChanged: (value) {},                    margin: const EdgeInsets.symmetric(horizontal: 10,vertical: 7),                  ),                  Padding(                    padding: const EdgeInsets.symmetric(horizontal: 10),                    child: Row(                    children: [                      Expanded(child: DateTimeTextFieldPicker(                        hintText: strings.select,                        title: strings.from,                        onTap: (date) {},                      )),                      SizedBox(width: 10,),                      Expanded(                        child: DateTimeTextFieldPicker(                          hintText: strings.select,                          title: strings.to,                          onTap: (date) {},                        ),                      ),                    ],                  ),                  ),                  SizedBox(height: 15,),                  Expanded(child: buildConsumer(context)),                ],              ),            ),          ),        ],      ),    );  }  @override  Widget buildWidget(BuildContext context, UnInitState state) {    return TransactionsScreen();  }}