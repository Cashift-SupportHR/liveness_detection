import 'package:shiftapp/presentation/shared/components/index.dart';import '../../../../../shared/components/text_field/build_text_field_item.dart';import '../../../../../shared/components/text_field/date_time_text_field_picker.dart';import '../../../data/models/add_transactions_prams.dart';class AddTransactionsScreen extends BaseStatelessWidget {  final Function(AddTransactionsPrams params) onAddTransactions;  AddTransactionsScreen({required  this.onAddTransactions});  TextEditingController descrtiptionController = TextEditingController();  TextEditingController entityController = TextEditingController();  final keyForm = GlobalKey<FormState>();  String? from;  String? to;  @override  Widget build(BuildContext context) {    return Scaffold(      bottomNavigationBar: RowButtons(        textCancelButton: strings.cancel,        onCancel: () => Navigator.pop(context),        onSave: () {          if (keyForm.currentState!.validate()) {            if (from == null || to == null) {              showErrorDialog(strings.select_date_from_to, context);            } else {              onAddTransactions(AddTransactionsPrams(                description: descrtiptionController.text,                destination: entityController.text,                startDateTime: from,                endDateTime: to,              ));            }          }        },      ),      body: SingleChildScrollView(        padding: const EdgeInsets.all(15),        child: Form(          key: keyForm,          child: Column(            children: [              BuildTextFieldItem(                title: strings.entity,                hintText: strings.entity,                controller: entityController,                keyboardType: TextInputType.text,              ),              SizedBox(height: 16),              Row(                children: [                  Expanded(                    child: DateTimeTextFieldPicker(                      hintText: strings.select,                      title: strings.from,                      onTap: (date) {                        from = date;                      },                    ),                  ),                  SizedBox(width: 10),                  Expanded(                    child: DateTimeTextFieldPicker(                      hintText: strings.select,                      title: strings.to,                      onTap: (date) {                        to = date;                      },                    ),                  ),                ],              ),              SizedBox(height: 16),              BuildTextFieldItem(                title: strings.description,                hintText: strings.description,                controller: descrtiptionController,                keyboardType: TextInputType.text,                minLines: 3,              ),            ],          ),        ),      ),    );  }}