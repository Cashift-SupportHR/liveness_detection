import 'package:shiftapp/presentation/presentationUser/common/common_state.dart';import 'package:shiftapp/presentation/shared/components/base_widget_bloc.dart';import '../../../../../../main_index.dart';import '../../../../common/stream_data_state.dart';import '../../../data/models/index.dart';import '../bloc/start_tour_bloc.dart';import '../bloc/start_tour_state.dart';import 'start_tour_screen.dart';class StartTourPage    extends BaseBlocWidget<Initialized<StartTourState>, StartTourCubit> {  final int Function() onInitialDataCallbackHandoverId;  StartTourPage({super.key, required this.onInitialDataCallbackHandoverId});  @override  void loadInitialData(BuildContext context) {    bloc.fetchInitialData();  }  // @override  // String? title(BuildContext context) {  //   return strings.start_tour;  // }  @override  Widget buildWidget(BuildContext context, Initialized<StartTourState> state) {    return StartTourScreen(      state: state.data,      onFetchRoundTypeTermsAndCondition: (int roundTypeId) {        bloc.fetchRoundTypeTermsAndCondition(roundTypeId);      },      onAddRoundTrip: (AddRoundTripParams params) {        print(onInitialDataCallbackHandoverId());        print("vehicleHandoverId");        params.vehicleHandoverId = onInitialDataCallbackHandoverId();        bloc.addRoundTrip(params);      },    );  }  @override  void onSuccessDismissed() {    Navigator.pushNamedAndRemoveUntil(      context,      Routes.currentTourMapPage,      (route) => false,    );  }}