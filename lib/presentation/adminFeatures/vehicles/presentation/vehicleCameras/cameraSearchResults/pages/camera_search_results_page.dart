import 'dart:async';import 'package:flutter/cupertino.dart';import 'package:shiftapp/presentation/shared/components/base_widget_bloc.dart';import '../../../../../../presentationUser/common/common_state.dart';import '../../../../../../shared/components/app_widgets.dart';import '../../../../data/models/vehicle_video_params.dart';import '../../../../domain/entities/camera_search_result_args.dart';import '../bloc/camera_search_results_cubit.dart';import 'camera_search_results_screen.dart';class CameraSearchResultsPage    extends BaseBlocWidget<UnInitState, CameraSearchResultsCubit> {  CameraSearchResultsPage({Key? key}) : super(key: key);  int vehicleId = 0;  CameraSearchResultArgs? cameraSearchResultArgs;  Timer? _fetchTimer;  @override  loadInitialData(BuildContext context) {    cameraSearchResultArgs = getArguments(context);    print('CameraSearchResultArgs: $cameraSearchResultArgs');    cameraSearchResultArgs?.vehicleVideoParams.isFirstMinute = true;    bloc.fetchVehicleCameras(cameraSearchResultArgs!);    _fetchTimer = Timer.periodic(Duration(seconds: 10), (timer) {      bloc.fetchVehicleLocation("2");    });  }  @override  bool detectRequiredTasks() {    return false;  }  @override  Widget buildWidget(BuildContext context, UnInitState state) {    return AppScaffold(      title: strings.cameras,      onClickBack: (){        Navigator.pop(context);        _fetchTimer?.cancel();      },      body: CameraSearchResultsScreen(        dataStream: bloc.cameraSearchResultsStream,        vehicleLocationStream: bloc.vehicleLocationStream,        args: cameraSearchResultArgs!,        onFilter: (VehicleVideoParams vehicleVideoParams) {          cameraSearchResultArgs?.vehicleVideoParams = vehicleVideoParams;          bloc.fetchVehicleCameras(cameraSearchResultArgs!);        },      ),    );  }  @override  void onSuccessDismissed() {    loadInitialData(context);  }}