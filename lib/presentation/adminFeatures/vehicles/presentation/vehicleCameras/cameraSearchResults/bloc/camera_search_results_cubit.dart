import 'package:injectable/injectable.dart';import 'package:shiftapp/core/bloc/base_cubit.dart';import 'package:shiftapp/presentation/adminFeatures/vehicles/data/models/index.dart';import 'package:shiftapp/presentation/presentationUser/common/stream_data_state.dart';import '../../../../domain/entities/camera_search_results.dart';@Injectable()class CameraSearchResultsCubit extends BaseCubit {  final VehiclesRepository _repository;  CameraSearchResultsCubit(    this._repository,  );  StreamDataStateInitial<CameraSearchResults> cameraSearchResultsStream =      StreamDataStateInitial<CameraSearchResults>();  Future<void> fetchVehicleCameras(VehicleVideoParams params) async {    try {      cameraSearchResultsStream.start();      final data = await _repository.fetchVehicleVideo(params);      cameraSearchResultsStream.setData(data);    } catch (e) {      cameraSearchResultsStream.setError(e);    }  }  void deleteVehicleCamera(int id) {    executeEmitterListener(() => _repository.deleteVehicleCamera(id));  }}