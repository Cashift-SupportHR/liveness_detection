import 'package:flutter/material.dart';import 'package:shiftapp/presentation/adminFeatures/projectsManagement/presentation/addNewProject/pages/periodPricing/widget/add_period_pricing_builder.dart';import 'package:shiftapp/presentation/presentationUser/resources/colors.dart';import 'package:shiftapp/presentation/presentationUser/resources/constants.dart';import 'package:shiftapp/presentation/shared/components/curancy_widget.dart';import '../../../../../../../../utils/app_icons.dart';import '../../../../../../../shared/components/base_stateless_widget.dart';import '../../../../../../../shared/components/buttons/app_icon_button.dart';import '../../../../../../../shared/components/decorations/decorations.dart';import '../../../../../../../shared/components/helper_widgets.dart';import '../../../../../domain/entities/period_pricing.dart';///  Created by harbey on 7/26/2023.class PeriodPricingItem extends BaseStatelessWidget {  final PeriodPricing item;  final int projectId;  final int companyId;  final Function(int id) deletePeriodPrice;  final Function() onRefresh;  PeriodPricingItem({    Key? key,    required this.item,    required this.deletePeriodPrice,    required this.companyId,    required this.projectId,    required this.onRefresh,  }) : super(key: key);  GlobalKey<FormState> formKey = GlobalKey<FormState>();  @override  Widget build(BuildContext context) {    return Container(      padding: EdgeInsets.all(10),      margin: EdgeInsets.symmetric(horizontal: 20, vertical: 8),      decoration: Decorations.shapeDecoration(),      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        mainAxisAlignment: MainAxisAlignment.start,        children: [          Row(            crossAxisAlignment: CrossAxisAlignment.start,            mainAxisAlignment: MainAxisAlignment.start,            children: [              Expanded(                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  mainAxisAlignment: MainAxisAlignment.start,                  children: [                    Text(                      item.name ?? '',                      style: kTextSemiBold.copyWith(                        fontSize: 20,                        color: kPrimary,                        overflow: TextOverflow.ellipsis,                      ),                    ),                    Text(                      item.timeName ?? '',                      style: kTextSemiBold.copyWith(                        fontSize: 16,                        color: kPaleGray72,                      ),                    ),                  ],                ),              ),              AppIconButton(                icon: AppIcons.edit,                iconSize: 20,                onTap: () {                  showAppModalBottomSheet(                    context: context,                    title: strings.edit_pricing,                    isScrollControlled: true,                    child: AddPeriodPricingBuilder(                      projectId: projectId,                      id: item.id!,                      companyId: companyId,                      onRefresh: onRefresh,                    ),                  );                },              ),              SizedBox(width: 10),              AppIconButton(                icon: AppIcons.deleteOutline,                iconSize: 20,                onTap: () {                  deletePeriodPrice(item.id ?? 0);                },              ),            ],          ),          Padding(            padding: const EdgeInsets.symmetric(vertical: 10),            child: Divider(color: kPaleGrayd2, height: .4),          ),          Row(            children: [              Text(                "${strings.value_pricing} : ",                style: kTextSemiBold.copyWith(fontSize: 16, color: kPaleGray5e),              ),              Expanded(                child: CurancyWidget(                  valuePrice: item.price ?? '',                  valueStyle: kTextSemiBold.copyWith(                    fontSize: 16,                    color: kPaleGray72,                  ),                ),              ),            ],          ),          Padding(            padding: const EdgeInsets.symmetric(vertical: 10),            child: Row(              children: [                Expanded(                  child: textValue(                    text: strings.from_day,                    value: item.fromDay ?? '',                  ),                ),                Expanded(                  child: textValue(                    text: strings.to_day,                    value: item.toDay ?? '',                  ),                ),              ],            ),          ),        ],      ),    );  }  textValue({required String text, required String value}) {    return Row(      children: [        Text(          "${text} : ",          style: kTextSemiBold.copyWith(fontSize: 16, color: kPaleGray5e),        ),        Expanded(          child: Text(            value,            style: kTextSemiBold.copyWith(fontSize: 16, color: kPaleGray72),          ),        ),      ],    );  }}