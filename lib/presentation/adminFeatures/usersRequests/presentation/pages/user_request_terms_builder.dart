import 'package:shiftapp/presentation/shared/components/index.dart';import 'package:shiftapp/presentation/shared/models/common_list_item.dart';import 'package:shiftapp/utils/app_utils.dart';import '../../../../../utils/app_icons.dart';import '../../../../presentationUser/common/common_state.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/resources/constants.dart';import '../../data/models/reject_user_request_params.dart';import '../../data/models/user_request_terms_params.dart';import '../../domain/entities/user_request.dart';import '../bloc/user_request_terms_cubit.dart';import '../widgets/bottom_sheet_accept_user_request.dart';class UsersRequestsBuilder extends BaseBlocWidget<    Initialized<List<CommonListItem>>, UserRequestTermsCubit> {  final UserRequest userRequest;  final Function() onRefresh;  UsersRequestsBuilder(      {Key? key, required this.userRequest, required this.onRefresh})      : super(key: key);  static void show(BuildContext context,      {required Function() onRefresh, required UserRequest userRequest}) {    showModalBottomSheet(      context: context,      backgroundColor: kWhite,      clipBehavior: Clip.antiAlias,      constraints: BoxConstraints(        minHeight: MediaQuery.of(context).size.height * 0.8,      ),      builder: (context) {        return UsersRequestsBuilder(          userRequest: userRequest,          onRefresh: onRefresh,        );      },    );  }  @override  bool detectRequiredTasks() {    return false;  }  @override  loadInitialData(BuildContext context) {    bloc.fetchUserRequestTerms(      UserRequestTermsParams(        requestTypeCode: userRequest.cashifterRequestTypeId,        requestStatusCode: userRequest.cashifterRequestStatusId,      ),    );  }  @override  Widget build(BuildContext context) {    return mainFrame(      body: Padding(        padding: const EdgeInsets.all(16),        child: Stack(          alignment: AlignmentDirectional.center,          children: [            header(),            buildConsumer(context),            closeButton(context),          ],        ),      ),    );  }  @override  Widget buildWidget(      BuildContext context, Initialized<List<CommonListItem>> state) {    return UserRequestTermsBottomSheet(      onAccept: () {        bloc.acceptRejectUserRequest(RejectUserRequestParams(          statusId: userRequest.cashifterRequestTypeId,          id: userRequest.id,        ));      },    );  }  @override  void onSuccessDismissed() {    onRefresh();  }  Column header() {    return Column(      children: [        kLoadSvgInCirclePath(AppIcons.warning_info),        SizedBox(          height: 10,        ),        Text(          strings.user_request_reject_title,          style: kTextBold.copyWith(fontSize: 16),        ),        Text(          strings.user_request_reject_subtitle,          style: kTextRegular.copyWith(fontSize: 14),        ),      ],    );  }  Align closeButton(BuildContext context) {    return Align(      alignment: AlignmentDirectional.topEnd,      child: AppIconButton(        icon: AppIcons.removeCircle,        iconSize: 25,        onTap: () {          Navigator.of(context).pop();        },      ),    );  }}