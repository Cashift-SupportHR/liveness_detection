import 'package:google_maps_flutter/google_maps_flutter.dart';import 'package:shiftapp/presentation/presentationUser/resources/constants.dart';import 'package:shiftapp/presentation/shared/components/index.dart';import 'package:shiftapp/utils/app_icons.dart';import 'package:shiftapp/utils/app_utils.dart';import '../../../../../core/services/routes.dart';import '../../../../presentationUser/resources/colors.dart';import '../../../../presentationUser/vehiclesOperation/presentation/currentTourMap/gasStationsPlan/page/gas_stations_plane_page.dart';import '../../../available_opportunities/presentation/widgets/build_popup_menu.dart';import '../../domain/entities/GasStation.dart';class GasStationsItem extends BaseStatelessWidget {  final GasStation data;  final Function(int id) onDelete;  final Function() onRefresh;  GasStationsItem(      {super.key,      required this.onRefresh,      required this.data,      required this.onDelete});  @override  Widget build(BuildContext context) {    return Container(      margin: EdgeInsets.only(          bottom: 10, left: 10, right: 10), // padding: EdgeInsets.all(10),      decoration: Decorations.decorationTabs,      child: Column(        children: [          Row(            mainAxisAlignment: MainAxisAlignment.end,            crossAxisAlignment: CrossAxisAlignment.end,            children: [              Padding(                padding: EdgeInsets.all(5),                child: InkWell(                  onTap: () {                    AppUtils.openMap(data.latitude?.toDouble() ?? 0,                        data.longtude?.toDouble() ?? 0);                  },                  child: Row(                    children: [                      kLoadSvgInCirclePath(                        AppIcons.location,                        color: kOrange00,                        height: 20,                        width: 20,                      ),                      Text(                        strings.location_gas_stations,                        style: kTextMedium.copyWith(                            color: kOrange00, fontSize: 13),                      ),                    ],                  ),                ),              ),              Spacer(),              _OptionsMenuButton(                onEdit: () async {                  final isRefresh = await Navigator.pushNamed(                      context, Routes.addGasStationsPage,                      arguments: data);                  if (isRefresh == true) {                    onRefresh();                  }                },                onDelete: () {                  onDelete(data.id ?? 0);                },              ),            ],          ),          ListRowTextsIconsV2(              iconColor: kGray_64,              padding: EdgeInsets.all(5),              paddingItem: EdgeInsets.all(5),              isExpanded: false,              items: [                ListRowTextItem(                    title: strings.name_ar,                    value: data.stationNameAr ?? "",                    icon: AppIcons.gasStations),                ListRowTextItem(                    title: strings.name_en,                    value: data.stationNameEn ?? "",                    icon: AppIcons.gasStations),                ListRowTextItem(                    title: strings.company_name,                    value: data.companyName ?? "",                    icon: AppIcons.projectName),                ListRowTextItem(                    title: strings.project_name,                    value: data.projectName ?? "",                    icon: AppIcons.work_project),                // ListRowTextItem( //     title: strings.location, //     value: "egypt", //     icon: AppIcons.location_),              ]),        ],      ),    );  }}class _OptionsMenuButton extends BaseStatelessWidget {  final Function() onEdit;  final Function() onDelete;  _OptionsMenuButton({    Key? key,    required this.onEdit,    required this.onDelete,  }) : super(key: key);  @override  Widget build(BuildContext context) {    TextStyle titleStyle = kTextBold.copyWith(fontSize: 10, color: kGreen_54);    double iconSize = 16;    return OptionsMenuButton(      title: Padding(        padding: const EdgeInsetsDirectional.only(            end: 5, top: 15, start: 5, bottom: 10),        child: kLoadSvgInCirclePath(          AppIcons.menu,          height: 6,          width: 6,        ),      ),      options: [        BuildPopupMenuItemContent(          title: strings.edit,          iconPath: AppIcons.editPenOutline,          titleStyle: titleStyle,          iconSize: iconSize,        ),        BuildPopupMenuItemContent(          title: strings.delete,          iconPath: AppIcons.deleteOutline,          titleStyle: titleStyle,          iconSize: iconSize,          isDivider: false,        ),      ],      onSelect: (value) async {        if (value == 0) {          onEdit();        } else if (value == 1) {          onDelete();        }      },    );  }}